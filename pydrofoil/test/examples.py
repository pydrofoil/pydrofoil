from pydrofoil.types import *
from pydrofoil.ir import *

def get_example_00():
    zr = Argument('zr', MachineInt())
    zin_v = Argument('zin_v', SmallFixedBitVector(64))
    block0 = Block()
    block1 = Block()
    block2 = Block()
    block3 = Block()
    block4 = Block()
    block5 = Block()
    block6 = Block()
    block7 = Block()
    block8 = Block()
    block9 = Block()
    block10 = Block()
    block11 = Block()
    block12 = Block()
    block13 = Block()
    block14 = Block()
    block15 = Block()
    block16 = Block()
    block17 = Block()
    block18 = Block()
    block19 = Block()
    block20 = Block()
    block21 = Block()
    block22 = Block()
    block23 = Block()
    block24 = Block()
    block25 = Block()
    block26 = Block()
    block27 = Block()
    block28 = Block()
    block29 = Block()
    block30 = Block()
    block31 = Block()
    block32 = Block()
    block33 = Block()
    block34 = Block()
    block35 = Block()
    block36 = Block()
    block37 = Block()
    block38 = Block()
    block39 = Block()
    block40 = Block()
    block41 = Block()
    block42 = Block()
    block43 = Block()
    block44 = Block()
    block45 = Block()
    block46 = Block()
    block47 = Block()
    block48 = Block()
    block49 = Block()
    block50 = Block()
    block51 = Block()
    block52 = Block()
    block53 = Block()
    block54 = Block()
    block55 = Block()
    block56 = Block()
    block57 = Block()
    block58 = Block()
    block59 = Block()
    block60 = Block()
    block61 = Block()
    block62 = Block()
    block63 = Block()
    block64 = Block()
    block65 = Block()
    block66 = Block()
    block67 = Block()
    i2 = block0.emit(Comment, 'inlined zregval_into_reg', [], Unit(), None, None)
    i3 = block0.emit(Operation, 'int64_to_int', [zr], Int(), '`812', 'zz4141')
    i4 = block0.emit(Operation, '@eq', [zr, MachineIntConstant(0)], Bool(), '`813', 'zz4140')
    block0.next = ConditionalGoto(i4, block1, block5, '`17 103:2-137:3')
    i5 = block1.emit(Comment, 'inlined zneq_int', [], Unit(), None, None)
    block1.next = ConditionalGoto(i4, block2, block3, '`17 138:2-142:3')
    block2.next = Return(UnitConstant.UNIT, None)
    i6 = block3.emit(Comment, 'inlined zrvfi_wX', [], Unit(), None, None)
    i7 = block3.emit(Operation, 'get_config_print_reg', [UnitConstant.UNIT], Bool(), '`17 140:10-140:32', 'zz42')
    block3.next = ConditionalGoto(i7, block4, block2, '`17 140:5-141:58')
    i8 = block4.emit(Operation, 'dec_str', [i3], String(), '`17 141:26-141:36', 'zz45')
    i9 = block4.emit(Comment, 'inlined zRegStr', [], Unit(), None, None)
    i10 = block4.emit(Cast, '$cast', [zin_v], GenericBitVector(), '`15 17:21-17:30', 'zz40')
    i11 = block4.emit(Operation, 'string_of_bits', [i10], String(), '`15 17:21-17:30', 'return')
    i12 = block4.emit(Operation, 'concat_str', [StringConstant(' <- '), i11], String(), '`17 141:39-141:57', 'zz46')
    i13 = block4.emit(Operation, 'concat_str', [i8, i12], String(), '`17 141:26-141:57', 'zz44')
    i14 = block4.emit(Operation, 'concat_str', [StringConstant('x'), i13], String(), '`17 141:20-141:57', 'zz43')
    i15 = block4.emit(Operation, 'print_reg', [i14], Unit(), '`17 141:10-141:58', 'return')
    block4.next = Goto(block2, None)
    i16 = block5.emit(Operation, '@eq', [zr, MachineIntConstant(1)], Bool(), '`818', 'zz4136')
    block5.next = ConditionalGoto(i16, block6, block7, '`17 103:2-137:3')
    i17 = block6.emit(GlobalWrite, 'zx1', [zin_v], SmallFixedBitVector(64), None, None)
    block6.next = Goto(block1, None)
    i18 = block7.emit(Operation, '@eq', [zr, MachineIntConstant(2)], Bool(), '`823', 'zz4132')
    block7.next = ConditionalGoto(i18, block8, block9, '`17 103:2-137:3')
    i19 = block8.emit(GlobalWrite, 'zx2', [zin_v], SmallFixedBitVector(64), None, None)
    block8.next = Goto(block1, None)
    i20 = block9.emit(Operation, '@eq', [zr, MachineIntConstant(3)], Bool(), '`828', 'zz4128')
    block9.next = ConditionalGoto(i20, block10, block11, '`17 103:2-137:3')
    i21 = block10.emit(GlobalWrite, 'zx3', [zin_v], SmallFixedBitVector(64), None, None)
    block10.next = Goto(block1, None)
    i22 = block11.emit(Operation, '@eq', [zr, MachineIntConstant(4)], Bool(), '`833', 'zz4124')
    block11.next = ConditionalGoto(i22, block12, block13, '`17 103:2-137:3')
    i23 = block12.emit(GlobalWrite, 'zx4', [zin_v], SmallFixedBitVector(64), None, None)
    block12.next = Goto(block1, None)
    i24 = block13.emit(Operation, '@eq', [zr, MachineIntConstant(5)], Bool(), '`838', 'zz4120')
    block13.next = ConditionalGoto(i24, block14, block15, '`17 103:2-137:3')
    i25 = block14.emit(GlobalWrite, 'zx5', [zin_v], SmallFixedBitVector(64), None, None)
    block14.next = Goto(block1, None)
    i26 = block15.emit(Operation, '@eq', [zr, MachineIntConstant(6)], Bool(), '`843', 'zz4116')
    block15.next = ConditionalGoto(i26, block16, block17, '`17 103:2-137:3')
    i27 = block16.emit(GlobalWrite, 'zx6', [zin_v], SmallFixedBitVector(64), None, None)
    block16.next = Goto(block1, None)
    i28 = block17.emit(Operation, '@eq', [zr, MachineIntConstant(7)], Bool(), '`848', 'zz4112')
    block17.next = ConditionalGoto(i28, block18, block19, '`17 103:2-137:3')
    i29 = block18.emit(GlobalWrite, 'zx7', [zin_v], SmallFixedBitVector(64), None, None)
    block18.next = Goto(block1, None)
    i30 = block19.emit(Operation, '@eq', [zr, MachineIntConstant(8)], Bool(), '`853', 'zz4108')
    block19.next = ConditionalGoto(i30, block20, block21, '`17 103:2-137:3')
    i31 = block20.emit(GlobalWrite, 'zx8', [zin_v], SmallFixedBitVector(64), None, None)
    block20.next = Goto(block1, None)
    i32 = block21.emit(Operation, '@eq', [zr, MachineIntConstant(9)], Bool(), '`858', 'zz4104')
    block21.next = ConditionalGoto(i32, block22, block23, '`17 103:2-137:3')
    i33 = block22.emit(GlobalWrite, 'zx9', [zin_v], SmallFixedBitVector(64), None, None)
    block22.next = Goto(block1, None)
    i34 = block23.emit(Operation, '@eq', [zr, MachineIntConstant(10)], Bool(), '`863', 'zz4100')
    block23.next = ConditionalGoto(i34, block24, block25, '`17 103:2-137:3')
    i35 = block24.emit(GlobalWrite, 'zx10', [zin_v], SmallFixedBitVector(64), None, None)
    block24.next = Goto(block1, None)
    i36 = block25.emit(Operation, '@eq', [zr, MachineIntConstant(11)], Bool(), '`868', 'zz496')
    block25.next = ConditionalGoto(i36, block26, block27, '`17 103:2-137:3')
    i37 = block26.emit(GlobalWrite, 'zx11', [zin_v], SmallFixedBitVector(64), None, None)
    block26.next = Goto(block1, None)
    i38 = block27.emit(Operation, '@eq', [zr, MachineIntConstant(12)], Bool(), '`873', 'zz492')
    block27.next = ConditionalGoto(i38, block28, block29, '`17 103:2-137:3')
    i39 = block28.emit(GlobalWrite, 'zx12', [zin_v], SmallFixedBitVector(64), None, None)
    block28.next = Goto(block1, None)
    i40 = block29.emit(Operation, '@eq', [zr, MachineIntConstant(13)], Bool(), '`878', 'zz488')
    block29.next = ConditionalGoto(i40, block30, block31, '`17 103:2-137:3')
    i41 = block30.emit(GlobalWrite, 'zx13', [zin_v], SmallFixedBitVector(64), None, None)
    block30.next = Goto(block1, None)
    i42 = block31.emit(Operation, '@eq', [zr, MachineIntConstant(14)], Bool(), '`883', 'zz484')
    block31.next = ConditionalGoto(i42, block32, block33, '`17 103:2-137:3')
    i43 = block32.emit(GlobalWrite, 'zx14', [zin_v], SmallFixedBitVector(64), None, None)
    block32.next = Goto(block1, None)
    i44 = block33.emit(Operation, '@eq', [zr, MachineIntConstant(15)], Bool(), '`888', 'zz480')
    block33.next = ConditionalGoto(i44, block34, block35, '`17 103:2-137:3')
    i45 = block34.emit(GlobalWrite, 'zx15', [zin_v], SmallFixedBitVector(64), None, None)
    block34.next = Goto(block1, None)
    i46 = block35.emit(Operation, '@eq', [zr, MachineIntConstant(16)], Bool(), '`893', 'zz476')
    block35.next = ConditionalGoto(i46, block36, block37, '`17 103:2-137:3')
    i47 = block36.emit(GlobalWrite, 'zx16', [zin_v], SmallFixedBitVector(64), None, None)
    block36.next = Goto(block1, None)
    i48 = block37.emit(Operation, '@eq', [zr, MachineIntConstant(17)], Bool(), '`898', 'zz472')
    block37.next = ConditionalGoto(i48, block38, block39, '`17 103:2-137:3')
    i49 = block38.emit(GlobalWrite, 'zx17', [zin_v], SmallFixedBitVector(64), None, None)
    block38.next = Goto(block1, None)
    i50 = block39.emit(Operation, '@eq', [zr, MachineIntConstant(18)], Bool(), '`903', 'zz468')
    block39.next = ConditionalGoto(i50, block40, block41, '`17 103:2-137:3')
    i51 = block40.emit(GlobalWrite, 'zx18', [zin_v], SmallFixedBitVector(64), None, None)
    block40.next = Goto(block1, None)
    i52 = block41.emit(Operation, '@eq', [zr, MachineIntConstant(19)], Bool(), '`908', 'zz464')
    block41.next = ConditionalGoto(i52, block42, block43, '`17 103:2-137:3')
    i53 = block42.emit(GlobalWrite, 'zx19', [zin_v], SmallFixedBitVector(64), None, None)
    block42.next = Goto(block1, None)
    i54 = block43.emit(Operation, '@eq', [zr, MachineIntConstant(20)], Bool(), '`913', 'zz460')
    block43.next = ConditionalGoto(i54, block44, block45, '`17 103:2-137:3')
    i55 = block44.emit(GlobalWrite, 'zx20', [zin_v], SmallFixedBitVector(64), None, None)
    block44.next = Goto(block1, None)
    i56 = block45.emit(Operation, '@eq', [zr, MachineIntConstant(21)], Bool(), '`918', 'zz456')
    block45.next = ConditionalGoto(i56, block46, block47, '`17 103:2-137:3')
    i57 = block46.emit(GlobalWrite, 'zx21', [zin_v], SmallFixedBitVector(64), None, None)
    block46.next = Goto(block1, None)
    i58 = block47.emit(Operation, '@eq', [zr, MachineIntConstant(22)], Bool(), '`923', 'zz452')
    block47.next = ConditionalGoto(i58, block48, block49, '`17 103:2-137:3')
    i59 = block48.emit(GlobalWrite, 'zx22', [zin_v], SmallFixedBitVector(64), None, None)
    block48.next = Goto(block1, None)
    i60 = block49.emit(Operation, '@eq', [zr, MachineIntConstant(23)], Bool(), '`928', 'zz448')
    block49.next = ConditionalGoto(i60, block50, block51, '`17 103:2-137:3')
    i61 = block50.emit(GlobalWrite, 'zx23', [zin_v], SmallFixedBitVector(64), None, None)
    block50.next = Goto(block1, None)
    i62 = block51.emit(Operation, '@eq', [zr, MachineIntConstant(24)], Bool(), '`933', 'zz444')
    block51.next = ConditionalGoto(i62, block52, block53, '`17 103:2-137:3')
    i63 = block52.emit(GlobalWrite, 'zx24', [zin_v], SmallFixedBitVector(64), None, None)
    block52.next = Goto(block1, None)
    i64 = block53.emit(Operation, '@eq', [zr, MachineIntConstant(25)], Bool(), '`938', 'zz440')
    block53.next = ConditionalGoto(i64, block54, block55, '`17 103:2-137:3')
    i65 = block54.emit(GlobalWrite, 'zx25', [zin_v], SmallFixedBitVector(64), None, None)
    block54.next = Goto(block1, None)
    i66 = block55.emit(Operation, '@eq', [zr, MachineIntConstant(26)], Bool(), '`943', 'zz436')
    block55.next = ConditionalGoto(i66, block56, block57, '`17 103:2-137:3')
    i67 = block56.emit(GlobalWrite, 'zx26', [zin_v], SmallFixedBitVector(64), None, None)
    block56.next = Goto(block1, None)
    i68 = block57.emit(Operation, '@eq', [zr, MachineIntConstant(27)], Bool(), '`948', 'zz432')
    block57.next = ConditionalGoto(i68, block58, block59, '`17 103:2-137:3')
    i69 = block58.emit(GlobalWrite, 'zx27', [zin_v], SmallFixedBitVector(64), None, None)
    block58.next = Goto(block1, None)
    i70 = block59.emit(Operation, '@eq', [zr, MachineIntConstant(28)], Bool(), '`953', 'zz428')
    block59.next = ConditionalGoto(i70, block60, block61, '`17 103:2-137:3')
    i71 = block60.emit(GlobalWrite, 'zx28', [zin_v], SmallFixedBitVector(64), None, None)
    block60.next = Goto(block1, None)
    i72 = block61.emit(Operation, '@eq', [zr, MachineIntConstant(29)], Bool(), '`958', 'zz424')
    block61.next = ConditionalGoto(i72, block62, block63, '`17 103:2-137:3')
    i73 = block62.emit(GlobalWrite, 'zx29', [zin_v], SmallFixedBitVector(64), None, None)
    block62.next = Goto(block1, None)
    i74 = block63.emit(Operation, '@eq', [zr, MachineIntConstant(30)], Bool(), '`963', 'zz420')
    block63.next = ConditionalGoto(i74, block64, block65, '`17 103:2-137:3')
    i75 = block64.emit(GlobalWrite, 'zx30', [zin_v], SmallFixedBitVector(64), None, None)
    block64.next = Goto(block1, None)
    i76 = block65.emit(Operation, '@eq', [zr, MachineIntConstant(31)], Bool(), '`968', 'zz416')
    block65.next = ConditionalGoto(i76, block66, block67, '`17 103:2-137:3')
    i77 = block66.emit(GlobalWrite, 'zx31', [zin_v], SmallFixedBitVector(64), None, None)
    block66.next = Goto(block1, None)
    i78 = block67.emit(Comment, 'sail_assert invalid register number', [], Unit(), None, None)
    block67.next = Raise(StringConstant('invalid register number'), None)
    return Graph('zwX', [zr, zin_v], block0)


def get_example_01():
    zr = Argument('zr', MachineInt())
    block0 = Block()
    block1 = Block()
    block2 = Block()
    block3 = Block()
    block4 = Block()
    block5 = Block()
    block6 = Block()
    block7 = Block()
    block8 = Block()
    block9 = Block()
    block10 = Block()
    block11 = Block()
    block12 = Block()
    block13 = Block()
    block14 = Block()
    block15 = Block()
    block16 = Block()
    block17 = Block()
    block18 = Block()
    block19 = Block()
    block20 = Block()
    block21 = Block()
    block22 = Block()
    block23 = Block()
    block24 = Block()
    block25 = Block()
    block26 = Block()
    block27 = Block()
    block28 = Block()
    block29 = Block()
    block30 = Block()
    block31 = Block()
    block32 = Block()
    block33 = Block()
    block34 = Block()
    block35 = Block()
    block36 = Block()
    block37 = Block()
    block38 = Block()
    block39 = Block()
    block40 = Block()
    block41 = Block()
    block42 = Block()
    block43 = Block()
    block44 = Block()
    block45 = Block()
    block46 = Block()
    block47 = Block()
    block48 = Block()
    block49 = Block()
    block50 = Block()
    block51 = Block()
    block52 = Block()
    block53 = Block()
    block54 = Block()
    block55 = Block()
    block56 = Block()
    block57 = Block()
    block58 = Block()
    block59 = Block()
    block60 = Block()
    block61 = Block()
    block62 = Block()
    block63 = Block()
    block64 = Block()
    block65 = Block()
    i1 = block0.emit(Operation, '@eq', [zr, MachineIntConstant(0)], Bool(), '`653', 'zz4129')
    block0.next = ConditionalGoto(i1, block1, block3, '`17 53:4-87:5')
    block1.next = Goto(block2, None)
    i2 = block2.emit_phi([block1, block4, block6, block8, block10, block12, block14, block16, block18, block20, block22, block24, block26, block28, block30, block32, block34, block36, block38, block40, block42, block44, block46, block48, block50, block52, block54, block56, block58, block60, block62, block64], [SmallBitVectorConstant(0x0, SmallFixedBitVector(64)), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None], SmallFixedBitVector(64))
    i3 = block2.emit(Comment, 'inlined zregval_from_reg', [], Unit(), None, None)
    block2.next = Return(i2, None)
    i4 = block3.emit(Operation, '@eq', [zr, MachineIntConstant(1)], Bool(), '`658', 'zz4125')
    block3.next = ConditionalGoto(i4, block4, block5, '`17 53:4-87:5')
    i5 = block4.emit(GlobalRead, 'zx1', [], SmallFixedBitVector(64), None, None)
    i2.prevvalues[1] = i5
    block4.next = Goto(block2, None)
    i6 = block5.emit(Operation, '@eq', [zr, MachineIntConstant(2)], Bool(), '`663', 'zz4121')
    block5.next = ConditionalGoto(i6, block6, block7, '`17 53:4-87:5')
    i7 = block6.emit(GlobalRead, 'zx2', [], SmallFixedBitVector(64), None, None)
    i2.prevvalues[2] = i7
    block6.next = Goto(block2, None)
    i8 = block7.emit(Operation, '@eq', [zr, MachineIntConstant(3)], Bool(), '`668', 'zz4117')
    block7.next = ConditionalGoto(i8, block8, block9, '`17 53:4-87:5')
    i9 = block8.emit(GlobalRead, 'zx3', [], SmallFixedBitVector(64), None, None)
    i2.prevvalues[3] = i9
    block8.next = Goto(block2, None)
    i10 = block9.emit(Operation, '@eq', [zr, MachineIntConstant(4)], Bool(), '`673', 'zz4113')
    block9.next = ConditionalGoto(i10, block10, block11, '`17 53:4-87:5')
    i11 = block10.emit(GlobalRead, 'zx4', [], SmallFixedBitVector(64), None, None)
    i2.prevvalues[4] = i11
    block10.next = Goto(block2, None)
    i12 = block11.emit(Operation, '@eq', [zr, MachineIntConstant(5)], Bool(), '`678', 'zz4109')
    block11.next = ConditionalGoto(i12, block12, block13, '`17 53:4-87:5')
    i13 = block12.emit(GlobalRead, 'zx5', [], SmallFixedBitVector(64), None, None)
    i2.prevvalues[5] = i13
    block12.next = Goto(block2, None)
    i14 = block13.emit(Operation, '@eq', [zr, MachineIntConstant(6)], Bool(), '`683', 'zz4105')
    block13.next = ConditionalGoto(i14, block14, block15, '`17 53:4-87:5')
    i15 = block14.emit(GlobalRead, 'zx6', [], SmallFixedBitVector(64), None, None)
    i2.prevvalues[6] = i15
    block14.next = Goto(block2, None)
    i16 = block15.emit(Operation, '@eq', [zr, MachineIntConstant(7)], Bool(), '`688', 'zz4101')
    block15.next = ConditionalGoto(i16, block16, block17, '`17 53:4-87:5')
    i17 = block16.emit(GlobalRead, 'zx7', [], SmallFixedBitVector(64), None, None)
    i2.prevvalues[7] = i17
    block16.next = Goto(block2, None)
    i18 = block17.emit(Operation, '@eq', [zr, MachineIntConstant(8)], Bool(), '`693', 'zz497')
    block17.next = ConditionalGoto(i18, block18, block19, '`17 53:4-87:5')
    i19 = block18.emit(GlobalRead, 'zx8', [], SmallFixedBitVector(64), None, None)
    i2.prevvalues[8] = i19
    block18.next = Goto(block2, None)
    i20 = block19.emit(Operation, '@eq', [zr, MachineIntConstant(9)], Bool(), '`698', 'zz493')
    block19.next = ConditionalGoto(i20, block20, block21, '`17 53:4-87:5')
    i21 = block20.emit(GlobalRead, 'zx9', [], SmallFixedBitVector(64), None, None)
    i2.prevvalues[9] = i21
    block20.next = Goto(block2, None)
    i22 = block21.emit(Operation, '@eq', [zr, MachineIntConstant(10)], Bool(), '`703', 'zz489')
    block21.next = ConditionalGoto(i22, block22, block23, '`17 53:4-87:5')
    i23 = block22.emit(GlobalRead, 'zx10', [], SmallFixedBitVector(64), None, None)
    i2.prevvalues[10] = i23
    block22.next = Goto(block2, None)
    i24 = block23.emit(Operation, '@eq', [zr, MachineIntConstant(11)], Bool(), '`708', 'zz485')
    block23.next = ConditionalGoto(i24, block24, block25, '`17 53:4-87:5')
    i25 = block24.emit(GlobalRead, 'zx11', [], SmallFixedBitVector(64), None, None)
    i2.prevvalues[11] = i25
    block24.next = Goto(block2, None)
    i26 = block25.emit(Operation, '@eq', [zr, MachineIntConstant(12)], Bool(), '`713', 'zz481')
    block25.next = ConditionalGoto(i26, block26, block27, '`17 53:4-87:5')
    i27 = block26.emit(GlobalRead, 'zx12', [], SmallFixedBitVector(64), None, None)
    i2.prevvalues[12] = i27
    block26.next = Goto(block2, None)
    i28 = block27.emit(Operation, '@eq', [zr, MachineIntConstant(13)], Bool(), '`718', 'zz477')
    block27.next = ConditionalGoto(i28, block28, block29, '`17 53:4-87:5')
    i29 = block28.emit(GlobalRead, 'zx13', [], SmallFixedBitVector(64), None, None)
    i2.prevvalues[13] = i29
    block28.next = Goto(block2, None)
    i30 = block29.emit(Operation, '@eq', [zr, MachineIntConstant(14)], Bool(), '`723', 'zz473')
    block29.next = ConditionalGoto(i30, block30, block31, '`17 53:4-87:5')
    i31 = block30.emit(GlobalRead, 'zx14', [], SmallFixedBitVector(64), None, None)
    i2.prevvalues[14] = i31
    block30.next = Goto(block2, None)
    i32 = block31.emit(Operation, '@eq', [zr, MachineIntConstant(15)], Bool(), '`728', 'zz469')
    block31.next = ConditionalGoto(i32, block32, block33, '`17 53:4-87:5')
    i33 = block32.emit(GlobalRead, 'zx15', [], SmallFixedBitVector(64), None, None)
    i2.prevvalues[15] = i33
    block32.next = Goto(block2, None)
    i34 = block33.emit(Operation, '@eq', [zr, MachineIntConstant(16)], Bool(), '`733', 'zz465')
    block33.next = ConditionalGoto(i34, block34, block35, '`17 53:4-87:5')
    i35 = block34.emit(GlobalRead, 'zx16', [], SmallFixedBitVector(64), None, None)
    i2.prevvalues[16] = i35
    block34.next = Goto(block2, None)
    i36 = block35.emit(Operation, '@eq', [zr, MachineIntConstant(17)], Bool(), '`738', 'zz461')
    block35.next = ConditionalGoto(i36, block36, block37, '`17 53:4-87:5')
    i37 = block36.emit(GlobalRead, 'zx17', [], SmallFixedBitVector(64), None, None)
    i2.prevvalues[17] = i37
    block36.next = Goto(block2, None)
    i38 = block37.emit(Operation, '@eq', [zr, MachineIntConstant(18)], Bool(), '`743', 'zz457')
    block37.next = ConditionalGoto(i38, block38, block39, '`17 53:4-87:5')
    i39 = block38.emit(GlobalRead, 'zx18', [], SmallFixedBitVector(64), None, None)
    i2.prevvalues[18] = i39
    block38.next = Goto(block2, None)
    i40 = block39.emit(Operation, '@eq', [zr, MachineIntConstant(19)], Bool(), '`748', 'zz453')
    block39.next = ConditionalGoto(i40, block40, block41, '`17 53:4-87:5')
    i41 = block40.emit(GlobalRead, 'zx19', [], SmallFixedBitVector(64), None, None)
    i2.prevvalues[19] = i41
    block40.next = Goto(block2, None)
    i42 = block41.emit(Operation, '@eq', [zr, MachineIntConstant(20)], Bool(), '`753', 'zz449')
    block41.next = ConditionalGoto(i42, block42, block43, '`17 53:4-87:5')
    i43 = block42.emit(GlobalRead, 'zx20', [], SmallFixedBitVector(64), None, None)
    i2.prevvalues[20] = i43
    block42.next = Goto(block2, None)
    i44 = block43.emit(Operation, '@eq', [zr, MachineIntConstant(21)], Bool(), '`758', 'zz445')
    block43.next = ConditionalGoto(i44, block44, block45, '`17 53:4-87:5')
    i45 = block44.emit(GlobalRead, 'zx21', [], SmallFixedBitVector(64), None, None)
    i2.prevvalues[21] = i45
    block44.next = Goto(block2, None)
    i46 = block45.emit(Operation, '@eq', [zr, MachineIntConstant(22)], Bool(), '`763', 'zz441')
    block45.next = ConditionalGoto(i46, block46, block47, '`17 53:4-87:5')
    i47 = block46.emit(GlobalRead, 'zx22', [], SmallFixedBitVector(64), None, None)
    i2.prevvalues[22] = i47
    block46.next = Goto(block2, None)
    i48 = block47.emit(Operation, '@eq', [zr, MachineIntConstant(23)], Bool(), '`768', 'zz437')
    block47.next = ConditionalGoto(i48, block48, block49, '`17 53:4-87:5')
    i49 = block48.emit(GlobalRead, 'zx23', [], SmallFixedBitVector(64), None, None)
    i2.prevvalues[23] = i49
    block48.next = Goto(block2, None)
    i50 = block49.emit(Operation, '@eq', [zr, MachineIntConstant(24)], Bool(), '`773', 'zz433')
    block49.next = ConditionalGoto(i50, block50, block51, '`17 53:4-87:5')
    i51 = block50.emit(GlobalRead, 'zx24', [], SmallFixedBitVector(64), None, None)
    i2.prevvalues[24] = i51
    block50.next = Goto(block2, None)
    i52 = block51.emit(Operation, '@eq', [zr, MachineIntConstant(25)], Bool(), '`778', 'zz429')
    block51.next = ConditionalGoto(i52, block52, block53, '`17 53:4-87:5')
    i53 = block52.emit(GlobalRead, 'zx25', [], SmallFixedBitVector(64), None, None)
    i2.prevvalues[25] = i53
    block52.next = Goto(block2, None)
    i54 = block53.emit(Operation, '@eq', [zr, MachineIntConstant(26)], Bool(), '`783', 'zz425')
    block53.next = ConditionalGoto(i54, block54, block55, '`17 53:4-87:5')
    i55 = block54.emit(GlobalRead, 'zx26', [], SmallFixedBitVector(64), None, None)
    i2.prevvalues[26] = i55
    block54.next = Goto(block2, None)
    i56 = block55.emit(Operation, '@eq', [zr, MachineIntConstant(27)], Bool(), '`788', 'zz421')
    block55.next = ConditionalGoto(i56, block56, block57, '`17 53:4-87:5')
    i57 = block56.emit(GlobalRead, 'zx27', [], SmallFixedBitVector(64), None, None)
    i2.prevvalues[27] = i57
    block56.next = Goto(block2, None)
    i58 = block57.emit(Operation, '@eq', [zr, MachineIntConstant(28)], Bool(), '`793', 'zz417')
    block57.next = ConditionalGoto(i58, block58, block59, '`17 53:4-87:5')
    i59 = block58.emit(GlobalRead, 'zx28', [], SmallFixedBitVector(64), None, None)
    i2.prevvalues[28] = i59
    block58.next = Goto(block2, None)
    i60 = block59.emit(Operation, '@eq', [zr, MachineIntConstant(29)], Bool(), '`798', 'zz413')
    block59.next = ConditionalGoto(i60, block60, block61, '`17 53:4-87:5')
    i61 = block60.emit(GlobalRead, 'zx29', [], SmallFixedBitVector(64), None, None)
    i2.prevvalues[29] = i61
    block60.next = Goto(block2, None)
    i62 = block61.emit(Operation, '@eq', [zr, MachineIntConstant(30)], Bool(), '`803', 'zz49')
    block61.next = ConditionalGoto(i62, block62, block63, '`17 53:4-87:5')
    i63 = block62.emit(GlobalRead, 'zx30', [], SmallFixedBitVector(64), None, None)
    i2.prevvalues[30] = i63
    block62.next = Goto(block2, None)
    i64 = block63.emit(Operation, '@eq', [zr, MachineIntConstant(31)], Bool(), '`808', 'zz45')
    block63.next = ConditionalGoto(i64, block64, block65, '`17 53:4-87:5')
    i65 = block64.emit(GlobalRead, 'zx31', [], SmallFixedBitVector(64), None, None)
    i2.prevvalues[31] = i65
    block64.next = Goto(block2, None)
    i66 = block65.emit(Comment, 'sail_assert invalid register number', [], Unit(), None, None)
    block65.next = Raise(StringConstant('invalid register number'), None)
    return Graph('zrX', [zr], block0)

def get_example_nand():
    zinstr = Union('zinstr', ('zAINST', 'zCINST'), (SmallFixedBitVector(16), Struct('ztuplez3z5bv1_z5enumz0zzarithmetic_op_z5structz0zztuplezz3zz5bool_zz5bool_zz5bool_z5enumz0zzjump', ('ztuplez3z5bv1_z5enumz0zzarithmetic_op_z5structz0zztuplezz3zz5bool_zz5bool_zz5bool_z5enumz0zzjump0', 'ztuplez3z5bv1_z5enumz0zzarithmetic_op_z5structz0zztuplezz3zz5bool_zz5bool_zz5bool_z5enumz0zzjump1', 'ztuplez3z5bv1_z5enumz0zzarithmetic_op_z5structz0zztuplezz3zz5bool_zz5bool_zz5bool_z5enumz0zzjump2', 'ztuplez3z5bv1_z5enumz0zzarithmetic_op_z5structz0zztuplezz3zz5bool_zz5bool_zz5bool_z5enumz0zzjump3'), (SmallFixedBitVector(1), Enum('zarithmetic_op', ('zC_ZERO', 'zC_ONE', 'zC_MINUSONE', 'zC_D', 'zC_A', 'zC_NOT_D', 'zC_NOT_A', 'zC_NEG_D', 'zC_NEG_A', 'zC_D_ADD_1', 'zC_A_ADD_1', 'zC_D_SUB_1', 'zC_A_SUB_1', 'zC_D_ADD_A', 'zC_D_SUB_A', 'zC_A_SUB_D', 'zC_D_AND_A', 'zC_D_OR_A')), Struct('ztuplez3z5bool_z5bool_z5bool', ('ztuplez3z5bool_z5bool_z5bool0', 'ztuplez3z5bool_z5bool_z5bool1', 'ztuplez3z5bool_z5bool_z5bool2'), (Bool(), Bool(), Bool()), True), Enum('zjump', ('zJDONT', 'zJGT', 'zJEQ', 'zJGE', 'zJLT', 'zJNE', 'zJLE', 'zJMP'))), True)))
    ztuplez3z5bv1_z5enumz0zzarithmetic_op_z5structz0zztuplezz3zz5bool_zz5bool_zz5bool_z5enumz0zzjump = Struct('ztuplez3z5bv1_z5enumz0zzarithmetic_op_z5structz0zztuplezz3zz5bool_zz5bool_zz5bool_z5enumz0zzjump', ('ztuplez3z5bv1_z5enumz0zzarithmetic_op_z5structz0zztuplezz3zz5bool_zz5bool_zz5bool_z5enumz0zzjump0', 'ztuplez3z5bv1_z5enumz0zzarithmetic_op_z5structz0zztuplezz3zz5bool_zz5bool_zz5bool_z5enumz0zzjump1', 'ztuplez3z5bv1_z5enumz0zzarithmetic_op_z5structz0zztuplezz3zz5bool_zz5bool_zz5bool_z5enumz0zzjump2', 'ztuplez3z5bv1_z5enumz0zzarithmetic_op_z5structz0zztuplezz3zz5bool_zz5bool_zz5bool_z5enumz0zzjump3'), (SmallFixedBitVector(1), Enum('zarithmetic_op', ('zC_ZERO', 'zC_ONE', 'zC_MINUSONE', 'zC_D', 'zC_A', 'zC_NOT_D', 'zC_NOT_A', 'zC_NEG_D', 'zC_NEG_A', 'zC_D_ADD_1', 'zC_A_ADD_1', 'zC_D_SUB_1', 'zC_A_SUB_1', 'zC_D_ADD_A', 'zC_D_SUB_A', 'zC_A_SUB_D', 'zC_D_AND_A', 'zC_D_OR_A')), Struct('ztuplez3z5bool_z5bool_z5bool', ('ztuplez3z5bool_z5bool_z5bool0', 'ztuplez3z5bool_z5bool_z5bool1', 'ztuplez3z5bool_z5bool_z5bool2'), (Bool(), Bool(), Bool()), True), Enum('zjump', ('zJDONT', 'zJGT', 'zJEQ', 'zJGE', 'zJLT', 'zJNE', 'zJLE', 'zJMP'))), True)
    zarithmetic_op = Enum('zarithmetic_op', ('zC_ZERO', 'zC_ONE', 'zC_MINUSONE', 'zC_D', 'zC_A', 'zC_NOT_D', 'zC_NOT_A', 'zC_NEG_D', 'zC_NEG_A', 'zC_D_ADD_1', 'zC_A_ADD_1', 'zC_D_SUB_1', 'zC_A_SUB_1', 'zC_D_ADD_A', 'zC_D_SUB_A', 'zC_A_SUB_D', 'zC_D_AND_A', 'zC_D_OR_A'))
    ztuplez3z5bool_z5bool_z5bool = Struct('ztuplez3z5bool_z5bool_z5bool', ('ztuplez3z5bool_z5bool_z5bool0', 'ztuplez3z5bool_z5bool_z5bool1', 'ztuplez3z5bool_z5bool_z5bool2'), (Bool(), Bool(), Bool()), True)
    zjump = Enum('zjump', ('zJDONT', 'zJGT', 'zJEQ', 'zJGE', 'zJLT', 'zJNE', 'zJLE', 'zJMP'))
    zmergez3var = Argument('zmergez3var', zinstr)
    block0 = Block()
    i1 = block0.emit(UnionCast, 'zCINST', [zmergez3var], ztuplez3z5bv1_z5enumz0zzarithmetic_op_z5structz0zztuplezz3zz5bool_zz5bool_zz5bool_z5enumz0zzjump, None, None)
    i2 = block0.emit(FieldAccess, 'ztuplez3z5bv1_z5enumz0zzarithmetic_op_z5structz0zztuplezz3zz5bool_zz5bool_zz5bool_z5enumz0zzjump0', [i1], SmallFixedBitVector(1), None, None)
    i3 = block0.emit(FieldAccess, 'ztuplez3z5bv1_z5enumz0zzarithmetic_op_z5structz0zztuplezz3zz5bool_zz5bool_zz5bool_z5enumz0zzjump1', [i1], zarithmetic_op, None, None)
    i4 = block0.emit(FieldAccess, 'ztuplez3z5bv1_z5enumz0zzarithmetic_op_z5structz0zztuplezz3zz5bool_zz5bool_zz5bool_z5enumz0zzjump2', [i1], ztuplez3z5bool_z5bool_z5bool, None, None)
    i5 = block0.emit(FieldAccess, 'ztuplez3z5bv1_z5enumz0zzarithmetic_op_z5structz0zztuplezz3zz5bool_zz5bool_zz5bool_z5enumz0zzjump3', [i1], zjump, None, None)
    i6 = block0.emit(Operation, 'zcompute_value', [i2, i3], SmallFixedBitVector(16), '`1 170:14-170:34', 'zz45')
    i7 = block0.emit(Operation, 'zassign_dest', [i4, i6], Unit(), '`1 171:2-171:26', 'zz46')
    i8 = block0.emit(Operation, 'zmaybe_jump', [i6, i5], Unit(), '`1 172:2-172:25', 'zz40')
    block0.next = Return(UnitConstant.UNIT, None)
    graph_execute = Graph('zexecute_zCINST', [zmergez3var], block0)

    zarithmetic_op = Enum('zarithmetic_op', ('zC_ZERO', 'zC_ONE', 'zC_MINUSONE', 'zC_D', 'zC_A', 'zC_NOT_D', 'zC_NOT_A', 'zC_NEG_D', 'zC_NEG_A', 'zC_D_ADD_1', 'zC_A_ADD_1', 'zC_D_SUB_1', 'zC_A_SUB_1', 'zC_D_ADD_A', 'zC_D_SUB_A', 'zC_A_SUB_D', 'zC_D_AND_A', 'zC_D_OR_A'))
    za = Argument('za', SmallFixedBitVector(1))
    zop = Argument('zop', zarithmetic_op)
    block0 = Block()
    block1 = Block()
    block2 = Block()
    block3 = Block()
    block4 = Block()
    block5 = Block()
    block6 = Block()
    block7 = Block()
    block8 = Block()
    block9 = Block()
    block10 = Block()
    block11 = Block()
    block12 = Block()
    block13 = Block()
    block14 = Block()
    block15 = Block()
    block16 = Block()
    block17 = Block()
    block18 = Block()
    block19 = Block()
    block20 = Block()
    block21 = Block()
    block22 = Block()
    block23 = Block()
    block24 = Block()
    block25 = Block()
    block26 = Block()
    block27 = Block()
    block28 = Block()
    block29 = Block()
    block30 = Block()
    block31 = Block()
    block32 = Block()
    block33 = Block()
    block34 = Block()
    block35 = Block()
    block36 = Block()
    block37 = Block()
    block38 = Block()
    i2 = block0.emit(Operation, '@eq_bits_bv_bv', [za, SmallBitVectorConstant(0b0, SmallFixedBitVector(1))], Bool(), '`1 124:13-124:21', 'zz441')
    block0.next = ConditionalGoto(i2, block1, block38, '`1 124:10-124:45')
    i3 = block1.emit(GlobalRead, 'zA', [], SmallFixedBitVector(16), None, None)
    block1.next = Goto(block2, None)
    i4 = block2.emit_phi([block38, block1], [None, i3], SmallFixedBitVector(16))
    i5 = block2.emit(GlobalRead, 'zD', [], SmallFixedBitVector(16), None, None)
    i6 = block2.emit(Operation, '@eq', [EnumConstant('zC_ZERO', Enum('zarithmetic_op', ('zC_ZERO', 'zC_ONE', 'zC_MINUSONE', 'zC_D', 'zC_A', 'zC_NOT_D', 'zC_NOT_A', 'zC_NEG_D', 'zC_NEG_A', 'zC_D_ADD_1', 'zC_A_ADD_1', 'zC_D_SUB_1', 'zC_A_SUB_1', 'zC_D_ADD_A', 'zC_D_SUB_A', 'zC_A_SUB_D', 'zC_D_AND_A', 'zC_D_OR_A'))), zop], Bool(), '`1 127:4-127:10', None)
    block2.next = ConditionalGoto(i6, block3, block5, '`1 127:4-127:10')
    block3.next = Goto(block4, None)
    i7 = block4.emit_phi([block3, block6, block8, block10, block12, block14, block16, block18, block20, block22, block24, block26, block28, block30, block32, block34, block36, block37], [SmallBitVectorConstant(0x0, SmallFixedBitVector(16)), SmallBitVectorConstant(0x1, SmallFixedBitVector(16)), SmallBitVectorConstant(0xffff, SmallFixedBitVector(16)), i5, i4, None, None, None, None, None, None, None, None, None, None, None, None, None], SmallFixedBitVector(16))
    block4.next = Return(i7, None)
    i8 = block5.emit(Operation, '@eq', [EnumConstant('zC_ONE', Enum('zarithmetic_op', ('zC_ZERO', 'zC_ONE', 'zC_MINUSONE', 'zC_D', 'zC_A', 'zC_NOT_D', 'zC_NOT_A', 'zC_NEG_D', 'zC_NEG_A', 'zC_D_ADD_1', 'zC_A_ADD_1', 'zC_D_SUB_1', 'zC_A_SUB_1', 'zC_D_ADD_A', 'zC_D_SUB_A', 'zC_A_SUB_D', 'zC_D_AND_A', 'zC_D_OR_A'))), zop], Bool(), '`1 128:4-128:9', None)
    block5.next = ConditionalGoto(i8, block6, block7, '`1 128:4-128:9')
    block6.next = Goto(block4, None)
    i9 = block7.emit(Operation, '@eq', [EnumConstant('zC_MINUSONE', Enum('zarithmetic_op', ('zC_ZERO', 'zC_ONE', 'zC_MINUSONE', 'zC_D', 'zC_A', 'zC_NOT_D', 'zC_NOT_A', 'zC_NEG_D', 'zC_NEG_A', 'zC_D_ADD_1', 'zC_A_ADD_1', 'zC_D_SUB_1', 'zC_A_SUB_1', 'zC_D_ADD_A', 'zC_D_SUB_A', 'zC_A_SUB_D', 'zC_D_AND_A', 'zC_D_OR_A'))), zop], Bool(), '`1 129:4-129:14', None)
    block7.next = ConditionalGoto(i9, block8, block9, '`1 129:4-129:14')
    block8.next = Goto(block4, None)
    i10 = block9.emit(Operation, '@eq', [EnumConstant('zC_D', Enum('zarithmetic_op', ('zC_ZERO', 'zC_ONE', 'zC_MINUSONE', 'zC_D', 'zC_A', 'zC_NOT_D', 'zC_NOT_A', 'zC_NEG_D', 'zC_NEG_A', 'zC_D_ADD_1', 'zC_A_ADD_1', 'zC_D_SUB_1', 'zC_A_SUB_1', 'zC_D_ADD_A', 'zC_D_SUB_A', 'zC_A_SUB_D', 'zC_D_AND_A', 'zC_D_OR_A'))), zop], Bool(), '`1 130:4-130:7', None)
    block9.next = ConditionalGoto(i10, block10, block11, '`1 130:4-130:7')
    block10.next = Goto(block4, None)
    i11 = block11.emit(Operation, '@eq', [EnumConstant('zC_A', Enum('zarithmetic_op', ('zC_ZERO', 'zC_ONE', 'zC_MINUSONE', 'zC_D', 'zC_A', 'zC_NOT_D', 'zC_NOT_A', 'zC_NEG_D', 'zC_NEG_A', 'zC_D_ADD_1', 'zC_A_ADD_1', 'zC_D_SUB_1', 'zC_A_SUB_1', 'zC_D_ADD_A', 'zC_D_SUB_A', 'zC_A_SUB_D', 'zC_D_AND_A', 'zC_D_OR_A'))), zop], Bool(), '`1 131:4-131:7', None)
    block11.next = ConditionalGoto(i11, block12, block13, '`1 131:4-131:7')
    block12.next = Goto(block4, None)
    i12 = block13.emit(Operation, '@eq', [EnumConstant('zC_NOT_D', Enum('zarithmetic_op', ('zC_ZERO', 'zC_ONE', 'zC_MINUSONE', 'zC_D', 'zC_A', 'zC_NOT_D', 'zC_NOT_A', 'zC_NEG_D', 'zC_NEG_A', 'zC_D_ADD_1', 'zC_A_ADD_1', 'zC_D_SUB_1', 'zC_A_SUB_1', 'zC_D_ADD_A', 'zC_D_SUB_A', 'zC_A_SUB_D', 'zC_D_AND_A', 'zC_D_OR_A'))), zop], Bool(), '`1 132:4-132:11', None)
    block13.next = ConditionalGoto(i12, block14, block15, '`1 132:4-132:11')
    i13 = block14.emit(Operation, '@not_vec_bv', [i5, MachineIntConstant(16)], SmallFixedBitVector(16), '`1 132:15-132:25', None)
    i7.prevvalues[5] = i13
    block14.next = Goto(block4, None)
    i14 = block15.emit(Operation, '@eq', [EnumConstant('zC_NOT_A', Enum('zarithmetic_op', ('zC_ZERO', 'zC_ONE', 'zC_MINUSONE', 'zC_D', 'zC_A', 'zC_NOT_D', 'zC_NOT_A', 'zC_NEG_D', 'zC_NEG_A', 'zC_D_ADD_1', 'zC_A_ADD_1', 'zC_D_SUB_1', 'zC_A_SUB_1', 'zC_D_ADD_A', 'zC_D_SUB_A', 'zC_A_SUB_D', 'zC_D_AND_A', 'zC_D_OR_A'))), zop], Bool(), '`1 133:4-133:11', None)
    block15.next = ConditionalGoto(i14, block16, block17, '`1 133:4-133:11')
    i15 = block16.emit(Operation, '@not_vec_bv', [i4, MachineIntConstant(16)], SmallFixedBitVector(16), '`1 133:15-133:25', None)
    i7.prevvalues[6] = i15
    block16.next = Goto(block4, None)
    i16 = block17.emit(Operation, '@eq', [EnumConstant('zC_NEG_D', Enum('zarithmetic_op', ('zC_ZERO', 'zC_ONE', 'zC_MINUSONE', 'zC_D', 'zC_A', 'zC_NOT_D', 'zC_NOT_A', 'zC_NEG_D', 'zC_NEG_A', 'zC_D_ADD_1', 'zC_A_ADD_1', 'zC_D_SUB_1', 'zC_A_SUB_1', 'zC_D_ADD_A', 'zC_D_SUB_A', 'zC_A_SUB_D', 'zC_D_AND_A', 'zC_D_OR_A'))), zop], Bool(), '`1 134:4-134:11', None)
    block17.next = ConditionalGoto(i16, block18, block19, '`1 134:4-134:11')
    i17 = block18.emit(Operation, '@sub_bits_bv_bv', [SmallBitVectorConstant(0x0, SmallFixedBitVector(16)), i5, MachineIntConstant(16)], SmallFixedBitVector(16), '`1 134:15-134:23', 'zz436')
    i7.prevvalues[7] = i17
    block18.next = Goto(block4, None)
    i18 = block19.emit(Operation, '@eq', [EnumConstant('zC_NEG_A', Enum('zarithmetic_op', ('zC_ZERO', 'zC_ONE', 'zC_MINUSONE', 'zC_D', 'zC_A', 'zC_NOT_D', 'zC_NOT_A', 'zC_NEG_D', 'zC_NEG_A', 'zC_D_ADD_1', 'zC_A_ADD_1', 'zC_D_SUB_1', 'zC_A_SUB_1', 'zC_D_ADD_A', 'zC_D_SUB_A', 'zC_A_SUB_D', 'zC_D_AND_A', 'zC_D_OR_A'))), zop], Bool(), '`1 135:4-135:11', None)
    block19.next = ConditionalGoto(i18, block20, block21, '`1 135:4-135:11')
    i19 = block20.emit(Operation, '@sub_bits_bv_bv', [SmallBitVectorConstant(0x0, SmallFixedBitVector(16)), i4, MachineIntConstant(16)], SmallFixedBitVector(16), '`1 135:15-135:23', 'zz433')
    i7.prevvalues[8] = i19
    block20.next = Goto(block4, None)
    i20 = block21.emit(Operation, '@eq', [EnumConstant('zC_D_ADD_1', Enum('zarithmetic_op', ('zC_ZERO', 'zC_ONE', 'zC_MINUSONE', 'zC_D', 'zC_A', 'zC_NOT_D', 'zC_NOT_A', 'zC_NEG_D', 'zC_NEG_A', 'zC_D_ADD_1', 'zC_A_ADD_1', 'zC_D_SUB_1', 'zC_A_SUB_1', 'zC_D_ADD_A', 'zC_D_SUB_A', 'zC_A_SUB_D', 'zC_D_AND_A', 'zC_D_OR_A'))), zop], Bool(), '`1 136:4-136:13', None)
    block21.next = ConditionalGoto(i20, block22, block23, '`1 136:4-136:13')
    i21 = block22.emit(Operation, '@add_bits_bv_bv', [i5, SmallBitVectorConstant(0x1, SmallFixedBitVector(16)), MachineIntConstant(16)], SmallFixedBitVector(16), '`1 136:17-136:27', 'zz430')
    i7.prevvalues[9] = i21
    block22.next = Goto(block4, None)
    i22 = block23.emit(Operation, '@eq', [EnumConstant('zC_A_ADD_1', Enum('zarithmetic_op', ('zC_ZERO', 'zC_ONE', 'zC_MINUSONE', 'zC_D', 'zC_A', 'zC_NOT_D', 'zC_NOT_A', 'zC_NEG_D', 'zC_NEG_A', 'zC_D_ADD_1', 'zC_A_ADD_1', 'zC_D_SUB_1', 'zC_A_SUB_1', 'zC_D_ADD_A', 'zC_D_SUB_A', 'zC_A_SUB_D', 'zC_D_AND_A', 'zC_D_OR_A'))), zop], Bool(), '`1 137:4-137:13', None)
    block23.next = ConditionalGoto(i22, block24, block25, '`1 137:4-137:13')
    i23 = block24.emit(Operation, '@add_bits_bv_bv', [i4, SmallBitVectorConstant(0x1, SmallFixedBitVector(16)), MachineIntConstant(16)], SmallFixedBitVector(16), '`1 137:17-137:27', 'zz427')
    i7.prevvalues[10] = i23
    block24.next = Goto(block4, None)
    i24 = block25.emit(Operation, '@eq', [EnumConstant('zC_D_SUB_1', Enum('zarithmetic_op', ('zC_ZERO', 'zC_ONE', 'zC_MINUSONE', 'zC_D', 'zC_A', 'zC_NOT_D', 'zC_NOT_A', 'zC_NEG_D', 'zC_NEG_A', 'zC_D_ADD_1', 'zC_A_ADD_1', 'zC_D_SUB_1', 'zC_A_SUB_1', 'zC_D_ADD_A', 'zC_D_SUB_A', 'zC_A_SUB_D', 'zC_D_AND_A', 'zC_D_OR_A'))), zop], Bool(), '`1 138:4-138:13', None)
    block25.next = ConditionalGoto(i24, block26, block27, '`1 138:4-138:13')
    i25 = block26.emit(Operation, '@sub_bits_bv_bv', [i5, SmallBitVectorConstant(0x1, SmallFixedBitVector(16)), MachineIntConstant(16)], SmallFixedBitVector(16), '`1 138:17-138:27', 'zz424')
    i7.prevvalues[11] = i25
    block26.next = Goto(block4, None)
    i26 = block27.emit(Operation, '@eq', [EnumConstant('zC_A_SUB_1', Enum('zarithmetic_op', ('zC_ZERO', 'zC_ONE', 'zC_MINUSONE', 'zC_D', 'zC_A', 'zC_NOT_D', 'zC_NOT_A', 'zC_NEG_D', 'zC_NEG_A', 'zC_D_ADD_1', 'zC_A_ADD_1', 'zC_D_SUB_1', 'zC_A_SUB_1', 'zC_D_ADD_A', 'zC_D_SUB_A', 'zC_A_SUB_D', 'zC_D_AND_A', 'zC_D_OR_A'))), zop], Bool(), '`1 139:4-139:13', None)
    block27.next = ConditionalGoto(i26, block28, block29, '`1 139:4-139:13')
    i27 = block28.emit(Operation, '@sub_bits_bv_bv', [i4, SmallBitVectorConstant(0x1, SmallFixedBitVector(16)), MachineIntConstant(16)], SmallFixedBitVector(16), '`1 139:17-139:27', 'zz421')
    i7.prevvalues[12] = i27
    block28.next = Goto(block4, None)
    i28 = block29.emit(Operation, '@eq', [EnumConstant('zC_D_ADD_A', Enum('zarithmetic_op', ('zC_ZERO', 'zC_ONE', 'zC_MINUSONE', 'zC_D', 'zC_A', 'zC_NOT_D', 'zC_NOT_A', 'zC_NEG_D', 'zC_NEG_A', 'zC_D_ADD_1', 'zC_A_ADD_1', 'zC_D_SUB_1', 'zC_A_SUB_1', 'zC_D_ADD_A', 'zC_D_SUB_A', 'zC_A_SUB_D', 'zC_D_AND_A', 'zC_D_OR_A'))), zop], Bool(), '`1 140:4-140:13', None)
    block29.next = ConditionalGoto(i28, block30, block31, '`1 140:4-140:13')
    i29 = block30.emit(Operation, '@add_bits_bv_bv', [i5, i4, MachineIntConstant(16)], SmallFixedBitVector(16), '`1 140:17-140:22', 'zz418')
    i7.prevvalues[13] = i29
    block30.next = Goto(block4, None)
    i30 = block31.emit(Operation, '@eq', [EnumConstant('zC_D_SUB_A', Enum('zarithmetic_op', ('zC_ZERO', 'zC_ONE', 'zC_MINUSONE', 'zC_D', 'zC_A', 'zC_NOT_D', 'zC_NOT_A', 'zC_NEG_D', 'zC_NEG_A', 'zC_D_ADD_1', 'zC_A_ADD_1', 'zC_D_SUB_1', 'zC_A_SUB_1', 'zC_D_ADD_A', 'zC_D_SUB_A', 'zC_A_SUB_D', 'zC_D_AND_A', 'zC_D_OR_A'))), zop], Bool(), '`1 141:4-141:13', None)
    block31.next = ConditionalGoto(i30, block32, block33, '`1 141:4-141:13')
    i31 = block32.emit(Operation, '@sub_bits_bv_bv', [i5, i4, MachineIntConstant(16)], SmallFixedBitVector(16), '`1 141:17-141:22', 'zz415')
    i7.prevvalues[14] = i31
    block32.next = Goto(block4, None)
    i32 = block33.emit(Operation, '@eq', [EnumConstant('zC_A_SUB_D', Enum('zarithmetic_op', ('zC_ZERO', 'zC_ONE', 'zC_MINUSONE', 'zC_D', 'zC_A', 'zC_NOT_D', 'zC_NOT_A', 'zC_NEG_D', 'zC_NEG_A', 'zC_D_ADD_1', 'zC_A_ADD_1', 'zC_D_SUB_1', 'zC_A_SUB_1', 'zC_D_ADD_A', 'zC_D_SUB_A', 'zC_A_SUB_D', 'zC_D_AND_A', 'zC_D_OR_A'))), zop], Bool(), '`1 142:4-142:13', None)
    block33.next = ConditionalGoto(i32, block34, block35, '`1 142:4-142:13')
    i33 = block34.emit(Operation, '@sub_bits_bv_bv', [i4, i5, MachineIntConstant(16)], SmallFixedBitVector(16), '`1 142:17-142:22', 'zz412')
    i7.prevvalues[15] = i33
    block34.next = Goto(block4, None)
    i34 = block35.emit(Operation, '@eq', [EnumConstant('zC_D_AND_A', Enum('zarithmetic_op', ('zC_ZERO', 'zC_ONE', 'zC_MINUSONE', 'zC_D', 'zC_A', 'zC_NOT_D', 'zC_NOT_A', 'zC_NEG_D', 'zC_NEG_A', 'zC_D_ADD_1', 'zC_A_ADD_1', 'zC_D_SUB_1', 'zC_A_SUB_1', 'zC_D_ADD_A', 'zC_D_SUB_A', 'zC_A_SUB_D', 'zC_D_AND_A', 'zC_D_OR_A'))), zop], Bool(), '`1 143:4-143:13', None)
    block35.next = ConditionalGoto(i34, block36, block37, '`1 143:4-143:13')
    i35 = block36.emit(Operation, '@and_vec_bv_bv', [i5, i4], SmallFixedBitVector(16), '`1 143:17-143:22', 'zz49')
    i7.prevvalues[16] = i35
    block36.next = Goto(block4, None)
    i36 = block37.emit(Operation, '@or_vec_bv_bv', [i5, i4], SmallFixedBitVector(16), '`1 144:16-144:21', 'zz46')
    i7.prevvalues[17] = i36
    block37.next = Goto(block4, None)
    i37 = block38.emit(GlobalRead, 'zA', [], SmallFixedBitVector(16), None, None)
    i38 = block38.emit(Operation, 'my_read_mem', [i37], SmallFixedBitVector(16), '`1 124:34-124:45', 'zz40')
    i4.prevvalues[0] = i38
    block38.next = Goto(block2, None)
    graph_compute_value = Graph('zcompute_value', [za, zop], block0)
    return dict(zcompute_value=graph_compute_value, zexecute_zCINST=graph_execute)
